package com.wiiv.example.blocks;

import java.util.Random;

import net.minecraft.block.Block;
import net.minecraft.block.BlockContainer;
import net.minecraft.block.material.Material;
import net.minecraft.client.renderer.texture.IIconRegister;
import net.minecraft.client.renderer.texture.IconRegister;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.util.IIcon;
import net.minecraft.util.Icon;
import net.minecraft.world.World;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import example.tabs.TabsWIIV;
import example.tileentities.TileEntityBomb;

public class BlockBomb extends BlockContainer {
	
	public BlockBomb(int id){
		super(id, Material.iron);
		setCreativeTab(TabsWIIV.tabBlocks);
		setHardness(2F);
		setStepSound(Block.soundMetalFootstep);
		setUnlocalizedName(BlockInfo.UNLOCALIZED_BOMB_NAME);
	}
	
	@SideOnly(Side.CLIENT)
	private IIcon[] activestateIcons;
	
	@SideOnly(Side.CLIENT)
	public void registerIcons(IIconRegister register) {
		blockIcon = register.registerIcon(BlockInfo.TEXTURE_LOCATION + ":" + BlockInfo.BOMB_TEXTURE + BlockInfo.BOMB_TEXTURE_STATES[0]);
		activestateIcons = new IIcon[BlockInfo.BOMB_TEXTURE_ACTIVE_STAGES.length];	
		for (int i = 0; i < activestateIcons.length; i++){
			activestateIcons[i] = register.registerIcon(BlockInfo.TEXTURE_LOCATION + ":" + BlockInfo.BOMB_TEXTURE + BlockInfo.BOMB_TEXTURE_STATES[1] + BlockInfo.BOMB_TEXTURE_ACTIVE_STAGES[i]);
		}
		//blockIcon = register.registerIcon(BlockInfo.TEXTURE_LOCATION + ":" + BlockInfo.BOMB_TEXTURE + BlockInfo.BOMB_TEXTURE_STATES[1]);
		//idleIcon = register.registerIcon(BlockInfo.TEXTURE_LOCATION + ":" + BlockInfo.BOMB_TEXTURE + BlockInfo.BOMB_TEXTURE_STATES[0]);
	}
		
	/*@Override
	@SideOnly(Side.CLIENT)
	public Icon getBlockTexture(IBlockAccess world, int x, int y, int z, int side){
		TileEntityBomb bomb = (TileEntityBomb)world.getBlockTileEntity(x, y, z);
		return bomb.isIdle() ? stateIcons[0] : stateIcons[1];
	}*/
	
	@Override
	@SideOnly(Side.CLIENT)
	public IIcon getIcon(int side, int meta){
		if(meta == 1) {
			return activestateIcons[0];
		}else if(meta == 2) {
			return activestateIcons[1];
		}else if(meta == 3) {
			return activestateIcons[2];
		}else
			return blockIcon;	
		//return meta == 0 ?  blockIcon : idleIcon; 
	}
	
	@Override
	public TileEntity createNewTileEntity(World world) {
		return new TileEntityBomb();
	}
	
	@Override
	public int idDropped(int meta, Random random, int fortune) {
		return-1;
	}

}
